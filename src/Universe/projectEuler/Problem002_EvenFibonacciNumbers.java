package Universe.projectEuler;

public class Problem002_EvenFibonacciNumbers {

    public static void main(String[] args) {

        int term1 = 0;
        int term2 = 1;
        int newTerm = 0;
        int evenTermsSum = 0;

        while (newTerm < 4_000_000) {
            newTerm = term1 + term2;
            if (newTerm >= 4_000_000) break;
            term1 = term2;
            term2 = newTerm;

            System.out.println(newTerm);

            if (newTerm % 2 == 0) {
                evenTermsSum = evenTermsSum + newTerm;
            }
        }
        System.out.println("\nThe sum of the even-valued Fibonacci terms that do not exceed 4M is: " + evenTermsSum);

    }
}

/** Each new term in the Fibonacci sequence is generated by adding the previous two terms.
    By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

// TODO można pominąć if z modulo (patrz overview). A co z pierwszym ifem-breakiem?